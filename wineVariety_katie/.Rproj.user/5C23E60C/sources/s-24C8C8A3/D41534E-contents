library(httr)
library(readxl)
library(lubridate)
library(gridExtra) #viewing multiple plots together
library(tidytext) #Text mining
library(textdata)
library(tidyr) #Spread, separate, unite, text mining (also included in the tidyverse package)
library(widyr) #Use for pairwise correlation
library(wordcloud2) #creative visualizations
library(scales)
library(billboard)
library(mgcv)
library(MASS)
library(olsrr)
library(gt)
library(broom)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(stringr)
library(tidyverse)

x <- read.csv("data/winemag-data-130k-v2.csv")

fix.contractions <- function(doc) {
  # "won't" is a special case as it does not expand to "wo not"
  doc <- gsub("won't", "will not", doc)
  doc <- gsub("can't", "can not", doc)
  doc <- gsub("n't", " not", doc)
  doc <- gsub("'ll", " will", doc)
  doc <- gsub("'re", " are", doc)
  doc <- gsub("'ve", " have", doc)
  doc <- gsub("'m", " am", doc)
  doc <- gsub("'d", " would", doc)
  # 's could be 'is' or could be possessive: it has no expansion
  doc <- gsub("'s", "", doc)
  return(doc)
}

# fix (expand) contractions
x$description <- sapply(x$description, fix.contractions)

# function to remove special characters
removeSpecialChars <- function(x) gsub("[^a-zA-Z0-9 ]", " ", x)

# remove special characters
x$description <- sapply(x$description, removeSpecialChars)

#make lower case
x$description <- sapply(x$description, tolower)

#manually input nondescriptive words
undesirable_words <- c("wine", "flavors", "palate", "finish", 
                      "drink", "notes", "nose", "offers", "touch",
                      "aromas", "blend", "texture", "character", "structure",
                      "balanced", "fine", "mouth", "style", "note", "vineyard",
                      "flavor", "balance", "hint", "alongside", "structured",
                      "ready", "hints", "mouthfeel", "delivers", "time",
                      "acidity", "color", "tastes", "bottling", "complex")
#unnest and remove stop, undesirable words
x_filtered <- x %>%
  na.omit(province) %>%
  unnest_tokens(word, description) %>%
  anti_join(stop_words) %>%
  distinct() %>%
  filter(!word %in% undesirable_words) %>%
  filter(nchar(word) > 3)

x_count <- x_filtered %>%
  group_by(word, variety) %>%
  mutate(n = n()) %>%
  ungroup() %>%
  na.omit(variety) %>%
  distinct(word, variety, .keep_all=TRUE) %>%
  group_by(variety) %>%
  top_n(n = 50, wt = n)
variety_count <- x %>%
  count(variety) %>%
  arrange(desc(n)) %>%
  slice(1:12) %>%
  select(variety)

data <- inner_join(variety_count, x_count, by="variety") %>%
  select(variety, country, points, price, province, region_1, title, winery, word, n)

byVariety_country <- 
  inner_join(x, variety_count, by="variety") %>%
  na.omit(province) %>%
  mutate( location = paste(province, country, sep = ", ")) %>%
  group_by(variety, country) %>%
  summarize(n = n()) %>%
  mutate(percent = n/sum(n))

byVariety_country <- 
  inner_join(x, variety_count, by="variety") %>%
  na.omit(province) %>%
  mutate( location = paste(province, country, sep = ", ")) %>%
  group_by(variety, country) %>%
  summarize(n = n()) %>%
  mutate(percent = n/sum(n)) %>%
  top_n(n = 1, wt = percent)

# prepare regular expression
regexp <- "[[:digit:]]+"

d <- data %>%
  mutate(year = str_extract(title, "[[:digit:]]+"))

# process string
str_extract(data, regexp)

texter <- data %>%
  filter(variety=="Chardonnay") %>%
  select(variety, word)
write.csv(x, 'data/winemag_words.csv')
write.csv(d, 'data/winemag_count.csv')
write.csv(byVariety, 'data/winemag_variety.csv')
write.csv(byVariety_country, 'data/winemag_country.csv')


